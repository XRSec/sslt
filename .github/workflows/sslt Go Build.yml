name: Build

on:
  workflow_dispatch:
    inputs:
      releaseName:
        description: 'Set release name'
        required: true
        default: "Manage your certificates with sslt"
      tagName:
        description: 'Set tag name'
        required: false
        type: string
  watch:
    types: [started]

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # -
      #   name: Private Actions Checkout
      #   uses: actions/checkout@v2
      # -
      #   name: Get Data
      #   id: time
      #   run: echo "::set-output name=dir::$(date +'%Y-%m-%d/%H:%M:%S')"
      # -
      #   name: Get commitId
      #   id: commitId
      #   run:
      #     echo "::set-output name=dir::$(git rev-parse HEAD)"
      # -
      #   name: Build with xgo
      #   uses: crazy-max/ghaction-xgo@v1
      #   with:
      #     xgo_version: latest
      #     go_version: ${{ matrix.go_version }}
      #     dest: bin
      #     prefix: sslt
      #     targets: linux/amd64, linux/arm64, darwin/amd64, darwin/arm64, windows/amd64, windows/arm64
      #     v: false
      #     x: false
      #     race: false
      #     ldflags: -s -w -X main.buildTime=${{ steps.time.outputs.dir }} -X main.versionData=${{ github.event.inputs.tagName }} -X main.commitId=${{ steps.commitId.outputs.dir }} -X main.author=XRSec
      #     buildmode: default
      # -
      #   name: Delete old Releases
      #   uses: dev-drprasad/delete-older-releases@v0.2.0
      #   with:
      #     repo: ${{ github.repository }}
      #     keep_latest: 3
      #     delete_tag_pattern: ""
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      # -
      #   name: Make release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: "bin/**"
      #     body_path: .github/body.txt
      #     name: ${{ github.event.inputs.releaseName }}
      #     tag_name: ${{ github.event.inputs.tagName }}
      #     draft: false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      -
        name: Get Url
        id: url
        run: |
          url="$(curl -sLm 10 https://api.github.com/repos/${{ GITHUB_REPOSITORY }} | jq .homepage | tr -d '"')"
          echo "${{ GITHUB_REPOSITORY }}"
          echo "{{ github.repository }}"
          echo "${{ github.repository }}"
          if [ -n "${url}" ]; then
            echo "::set-output name=url::${url}"
          else
            echo "::set-output name=url::${{ github.server_url }}/${{ github.repository }}"
          fi
      - 
        name: Send dingding notify
        uses: zcong1993/actions-ding@master
        with:
          dingToken: ${{ secrets.DING_TOKEN }}
          secret: ${{ secrets.DING_SECRET }}
          body: |
            {
              "msgtype": "link",
              "link": {
                  "text": "${{github.repository}} Update Success!",
                  "title": "${{github.repository}} Update Success!",
                  "picUrl": "${steps.checkUpdate.outputs.url}",
                  "messageUrl": "${{github.server_url}}/${{github.repository}}"
              }
            }